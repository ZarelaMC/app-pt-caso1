name: Análisis CI con SonarCloud y Deploy (CD) S3 

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Descargar el código del repositorio
        uses: actions/checkout@v3  # ✅ Versión actualizada
        with:
          fetch-depth: 0

      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Instalar dependencias
        run: npm ci  # 🔐 Instalación segura con package-lock.json

      - name: 🛠️ Dar permisos a Karma
        run: chmod +x node_modules/.bin/karma

      - name: 🧪 Ejecutar pruebas con Karma y Jasmine - generación de coverage
        run: |
          npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless  # 📊 Genera reporte de cobertura

      - name: 🔍 Escanear código con SonarCloud
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

      - name: 🛑 Verificar resultado de SonarCloud
        id: sonarcloud-check
        run: |
          SONAR_PROJECT_KEY=${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}
          SONAR_URL="https://sonarcloud.io/api/qualitygates/project_status?projectKey=${SONAR_PROJECT_KEY}"

          RESPONSE=$(curl -s -u "${SONAR_TOKEN}:" "${SONAR_URL}")
          STATUS=$(echo "${RESPONSE}" | jq -r '.projectStatus.status')

          if [ "${STATUS}" == "OK" ]; then
            echo "✅ El análisis de SonarCloud ha pasado correctamente."
          else
            echo "❌ El análisis de SonarCloud ha fallado."
            echo "Detalles del fallo:"
            echo "${RESPONSE}" | jq '.projectStatus.conditions'
            exit 1  # 💥 Fuerza el fallo del job
          fi

  deployS3:
      name: 🚀 Deploy S3 
      runs-on: ubuntu-latest
      needs: sonarqube
      steps:
        - name: 📥 Checkout del código
          uses: actions/checkout@v3

        - name: 🔧 Configurar Node.js
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: 📦 Instalar dependencias
          run: npm ci

        - name: 🛠️ Compilar aplicación Angular
          run: npm run build -- --verbose

        - name: 📁 Empaquetar archivos del build (build.zip para CodeDeploy)
          run: |        
            mkdir deploy_folder_zip
            cp appspec.yml deploy_folder_zip/
            cp -r scripts deploy_folder_zip/

            cp -r dist/appTareas/browser/* deploy_folder_zip/

            cd deploy_folder_zip
            zip -r ../build.zip .

        - name: 🚀 Subir build.zip a S3
          run: |
              aws s3 cp build.zip s3://${{ secrets.AWS_S3_BUCKET }}/build.zip
              echo "✅ build.zip subido exitosamente a S3"
          
        - name: 🔍 Validar que build.zip se subió correctamente
          run: |
            if aws s3 ls s3://${{ secrets.AWS_S3_BUCKET }}/build.zip; then
              echo "✅ Validación exitosa: build.zip está en S3"
            else
              echo "❌ ERROR: build.zip NO se encuentra en S3"
              exit 1
            fi



        